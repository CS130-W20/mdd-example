/**
 * generated by Xtext 2.19.0
 */
package navi.navigationRules;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see navi.navigationRules.NavigationRulesFactory
 * @model kind="package"
 * @generated
 */
public interface NavigationRulesPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "navigationRules";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.NavigationRules.navi";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "navigationRules";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  NavigationRulesPackage eINSTANCE = navi.navigationRules.impl.NavigationRulesPackageImpl.init();

  /**
   * The meta object id for the '{@link navi.navigationRules.impl.RootImpl <em>Root</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see navi.navigationRules.impl.RootImpl
   * @see navi.navigationRules.impl.NavigationRulesPackageImpl#getRoot()
   * @generated
   */
  int ROOT = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROOT__NAME = 0;

  /**
   * The feature id for the '<em><b>Mappingsdefs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROOT__MAPPINGSDEFS = 1;

  /**
   * The feature id for the '<em><b>Transitiondefs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROOT__TRANSITIONDEFS = 2;

  /**
   * The feature id for the '<em><b>Ruledefs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROOT__RULEDEFS = 3;

  /**
   * The number of structural features of the '<em>Root</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROOT_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link navi.navigationRules.impl.MappingsImpl <em>Mappings</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see navi.navigationRules.impl.MappingsImpl
   * @see navi.navigationRules.impl.NavigationRulesPackageImpl#getMappings()
   * @generated
   */
  int MAPPINGS = 1;

  /**
   * The feature id for the '<em><b>Mappings</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAPPINGS__MAPPINGS = 0;

  /**
   * The number of structural features of the '<em>Mappings</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAPPINGS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link navi.navigationRules.impl.MappingImpl <em>Mapping</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see navi.navigationRules.impl.MappingImpl
   * @see navi.navigationRules.impl.NavigationRulesPackageImpl#getMapping()
   * @generated
   */
  int MAPPING = 2;

  /**
   * The number of structural features of the '<em>Mapping</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAPPING_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link navi.navigationRules.impl.MappingSpecImpl <em>Mapping Spec</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see navi.navigationRules.impl.MappingSpecImpl
   * @see navi.navigationRules.impl.NavigationRulesPackageImpl#getMappingSpec()
   * @generated
   */
  int MAPPING_SPEC = 3;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAPPING_SPEC__NAME = MAPPING_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Mapping Spec</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAPPING_SPEC_FEATURE_COUNT = MAPPING_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link navi.navigationRules.impl.PermissionMappingSpecImpl <em>Permission Mapping Spec</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see navi.navigationRules.impl.PermissionMappingSpecImpl
   * @see navi.navigationRules.impl.NavigationRulesPackageImpl#getPermissionMappingSpec()
   * @generated
   */
  int PERMISSION_MAPPING_SPEC = 4;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PERMISSION_MAPPING_SPEC__NAME = MAPPING_SPEC__NAME;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PERMISSION_MAPPING_SPEC__VALUE = MAPPING_SPEC_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Permission Mapping Spec</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PERMISSION_MAPPING_SPEC_FEATURE_COUNT = MAPPING_SPEC_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link navi.navigationRules.impl.CoordinateMappingSpecImpl <em>Coordinate Mapping Spec</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see navi.navigationRules.impl.CoordinateMappingSpecImpl
   * @see navi.navigationRules.impl.NavigationRulesPackageImpl#getCoordinateMappingSpec()
   * @generated
   */
  int COORDINATE_MAPPING_SPEC = 5;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COORDINATE_MAPPING_SPEC__NAME = MAPPING_SPEC__NAME;

  /**
   * The feature id for the '<em><b>Controllername</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COORDINATE_MAPPING_SPEC__CONTROLLERNAME = MAPPING_SPEC_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Bundleid</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COORDINATE_MAPPING_SPEC__BUNDLEID = MAPPING_SPEC_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Coordinate Mapping Spec</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COORDINATE_MAPPING_SPEC_FEATURE_COUNT = MAPPING_SPEC_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link navi.navigationRules.impl.TransitionDefinitionsImpl <em>Transition Definitions</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see navi.navigationRules.impl.TransitionDefinitionsImpl
   * @see navi.navigationRules.impl.NavigationRulesPackageImpl#getTransitionDefinitions()
   * @generated
   */
  int TRANSITION_DEFINITIONS = 6;

  /**
   * The feature id for the '<em><b>Transitions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRANSITION_DEFINITIONS__TRANSITIONS = 0;

  /**
   * The number of structural features of the '<em>Transition Definitions</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRANSITION_DEFINITIONS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link navi.navigationRules.impl.TransitionDefinitionImpl <em>Transition Definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see navi.navigationRules.impl.TransitionDefinitionImpl
   * @see navi.navigationRules.impl.NavigationRulesPackageImpl#getTransitionDefinition()
   * @generated
   */
  int TRANSITION_DEFINITION = 7;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRANSITION_DEFINITION__NAME = 0;

  /**
   * The number of structural features of the '<em>Transition Definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRANSITION_DEFINITION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link navi.navigationRules.impl.NavigationRulesImpl <em>Navigation Rules</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see navi.navigationRules.impl.NavigationRulesImpl
   * @see navi.navigationRules.impl.NavigationRulesPackageImpl#getNavigationRules()
   * @generated
   */
  int NAVIGATION_RULES = 8;

  /**
   * The feature id for the '<em><b>Rules</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAVIGATION_RULES__RULES = 0;

  /**
   * The number of structural features of the '<em>Navigation Rules</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAVIGATION_RULES_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link navi.navigationRules.impl.RuleImpl <em>Rule</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see navi.navigationRules.impl.RuleImpl
   * @see navi.navigationRules.impl.NavigationRulesPackageImpl#getRule()
   * @generated
   */
  int RULE = 9;

  /**
   * The feature id for the '<em><b>Source</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RULE__SOURCE = 0;

  /**
   * The feature id for the '<em><b>Destinations</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RULE__DESTINATIONS = 1;

  /**
   * The number of structural features of the '<em>Rule</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RULE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link navi.navigationRules.impl.DestinationImpl <em>Destination</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see navi.navigationRules.impl.DestinationImpl
   * @see navi.navigationRules.impl.NavigationRulesPackageImpl#getDestination()
   * @generated
   */
  int DESTINATION = 10;

  /**
   * The feature id for the '<em><b>Transition</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DESTINATION__TRANSITION = 0;

  /**
   * The feature id for the '<em><b>Target</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DESTINATION__TARGET = 1;

  /**
   * The feature id for the '<em><b>Permissions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DESTINATION__PERMISSIONS = 2;

  /**
   * The number of structural features of the '<em>Destination</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DESTINATION_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link navi.navigationRules.impl.PermissionReferenceImpl <em>Permission Reference</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see navi.navigationRules.impl.PermissionReferenceImpl
   * @see navi.navigationRules.impl.NavigationRulesPackageImpl#getPermissionReference()
   * @generated
   */
  int PERMISSION_REFERENCE = 11;

  /**
   * The feature id for the '<em><b>Permission</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PERMISSION_REFERENCE__PERMISSION = 0;

  /**
   * The number of structural features of the '<em>Permission Reference</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PERMISSION_REFERENCE_FEATURE_COUNT = 1;


  /**
   * Returns the meta object for class '{@link navi.navigationRules.Root <em>Root</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Root</em>'.
   * @see navi.navigationRules.Root
   * @generated
   */
  EClass getRoot();

  /**
   * Returns the meta object for the attribute '{@link navi.navigationRules.Root#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see navi.navigationRules.Root#getName()
   * @see #getRoot()
   * @generated
   */
  EAttribute getRoot_Name();

  /**
   * Returns the meta object for the containment reference '{@link navi.navigationRules.Root#getMappingsdefs <em>Mappingsdefs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Mappingsdefs</em>'.
   * @see navi.navigationRules.Root#getMappingsdefs()
   * @see #getRoot()
   * @generated
   */
  EReference getRoot_Mappingsdefs();

  /**
   * Returns the meta object for the containment reference '{@link navi.navigationRules.Root#getTransitiondefs <em>Transitiondefs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Transitiondefs</em>'.
   * @see navi.navigationRules.Root#getTransitiondefs()
   * @see #getRoot()
   * @generated
   */
  EReference getRoot_Transitiondefs();

  /**
   * Returns the meta object for the containment reference '{@link navi.navigationRules.Root#getRuledefs <em>Ruledefs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Ruledefs</em>'.
   * @see navi.navigationRules.Root#getRuledefs()
   * @see #getRoot()
   * @generated
   */
  EReference getRoot_Ruledefs();

  /**
   * Returns the meta object for class '{@link navi.navigationRules.Mappings <em>Mappings</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Mappings</em>'.
   * @see navi.navigationRules.Mappings
   * @generated
   */
  EClass getMappings();

  /**
   * Returns the meta object for the containment reference list '{@link navi.navigationRules.Mappings#getMappings <em>Mappings</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Mappings</em>'.
   * @see navi.navigationRules.Mappings#getMappings()
   * @see #getMappings()
   * @generated
   */
  EReference getMappings_Mappings();

  /**
   * Returns the meta object for class '{@link navi.navigationRules.Mapping <em>Mapping</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Mapping</em>'.
   * @see navi.navigationRules.Mapping
   * @generated
   */
  EClass getMapping();

  /**
   * Returns the meta object for class '{@link navi.navigationRules.MappingSpec <em>Mapping Spec</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Mapping Spec</em>'.
   * @see navi.navigationRules.MappingSpec
   * @generated
   */
  EClass getMappingSpec();

  /**
   * Returns the meta object for the attribute '{@link navi.navigationRules.MappingSpec#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see navi.navigationRules.MappingSpec#getName()
   * @see #getMappingSpec()
   * @generated
   */
  EAttribute getMappingSpec_Name();

  /**
   * Returns the meta object for class '{@link navi.navigationRules.PermissionMappingSpec <em>Permission Mapping Spec</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Permission Mapping Spec</em>'.
   * @see navi.navigationRules.PermissionMappingSpec
   * @generated
   */
  EClass getPermissionMappingSpec();

  /**
   * Returns the meta object for the attribute '{@link navi.navigationRules.PermissionMappingSpec#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see navi.navigationRules.PermissionMappingSpec#getValue()
   * @see #getPermissionMappingSpec()
   * @generated
   */
  EAttribute getPermissionMappingSpec_Value();

  /**
   * Returns the meta object for class '{@link navi.navigationRules.CoordinateMappingSpec <em>Coordinate Mapping Spec</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Coordinate Mapping Spec</em>'.
   * @see navi.navigationRules.CoordinateMappingSpec
   * @generated
   */
  EClass getCoordinateMappingSpec();

  /**
   * Returns the meta object for the attribute '{@link navi.navigationRules.CoordinateMappingSpec#getControllername <em>Controllername</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Controllername</em>'.
   * @see navi.navigationRules.CoordinateMappingSpec#getControllername()
   * @see #getCoordinateMappingSpec()
   * @generated
   */
  EAttribute getCoordinateMappingSpec_Controllername();

  /**
   * Returns the meta object for the attribute '{@link navi.navigationRules.CoordinateMappingSpec#getBundleid <em>Bundleid</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Bundleid</em>'.
   * @see navi.navigationRules.CoordinateMappingSpec#getBundleid()
   * @see #getCoordinateMappingSpec()
   * @generated
   */
  EAttribute getCoordinateMappingSpec_Bundleid();

  /**
   * Returns the meta object for class '{@link navi.navigationRules.TransitionDefinitions <em>Transition Definitions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Transition Definitions</em>'.
   * @see navi.navigationRules.TransitionDefinitions
   * @generated
   */
  EClass getTransitionDefinitions();

  /**
   * Returns the meta object for the containment reference list '{@link navi.navigationRules.TransitionDefinitions#getTransitions <em>Transitions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Transitions</em>'.
   * @see navi.navigationRules.TransitionDefinitions#getTransitions()
   * @see #getTransitionDefinitions()
   * @generated
   */
  EReference getTransitionDefinitions_Transitions();

  /**
   * Returns the meta object for class '{@link navi.navigationRules.TransitionDefinition <em>Transition Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Transition Definition</em>'.
   * @see navi.navigationRules.TransitionDefinition
   * @generated
   */
  EClass getTransitionDefinition();

  /**
   * Returns the meta object for the attribute '{@link navi.navigationRules.TransitionDefinition#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see navi.navigationRules.TransitionDefinition#getName()
   * @see #getTransitionDefinition()
   * @generated
   */
  EAttribute getTransitionDefinition_Name();

  /**
   * Returns the meta object for class '{@link navi.navigationRules.NavigationRules <em>Navigation Rules</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Navigation Rules</em>'.
   * @see navi.navigationRules.NavigationRules
   * @generated
   */
  EClass getNavigationRules();

  /**
   * Returns the meta object for the containment reference list '{@link navi.navigationRules.NavigationRules#getRules <em>Rules</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Rules</em>'.
   * @see navi.navigationRules.NavigationRules#getRules()
   * @see #getNavigationRules()
   * @generated
   */
  EReference getNavigationRules_Rules();

  /**
   * Returns the meta object for class '{@link navi.navigationRules.Rule <em>Rule</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Rule</em>'.
   * @see navi.navigationRules.Rule
   * @generated
   */
  EClass getRule();

  /**
   * Returns the meta object for the reference '{@link navi.navigationRules.Rule#getSource <em>Source</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Source</em>'.
   * @see navi.navigationRules.Rule#getSource()
   * @see #getRule()
   * @generated
   */
  EReference getRule_Source();

  /**
   * Returns the meta object for the containment reference list '{@link navi.navigationRules.Rule#getDestinations <em>Destinations</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Destinations</em>'.
   * @see navi.navigationRules.Rule#getDestinations()
   * @see #getRule()
   * @generated
   */
  EReference getRule_Destinations();

  /**
   * Returns the meta object for class '{@link navi.navigationRules.Destination <em>Destination</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Destination</em>'.
   * @see navi.navigationRules.Destination
   * @generated
   */
  EClass getDestination();

  /**
   * Returns the meta object for the reference '{@link navi.navigationRules.Destination#getTransition <em>Transition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Transition</em>'.
   * @see navi.navigationRules.Destination#getTransition()
   * @see #getDestination()
   * @generated
   */
  EReference getDestination_Transition();

  /**
   * Returns the meta object for the reference '{@link navi.navigationRules.Destination#getTarget <em>Target</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Target</em>'.
   * @see navi.navigationRules.Destination#getTarget()
   * @see #getDestination()
   * @generated
   */
  EReference getDestination_Target();

  /**
   * Returns the meta object for the containment reference list '{@link navi.navigationRules.Destination#getPermissions <em>Permissions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Permissions</em>'.
   * @see navi.navigationRules.Destination#getPermissions()
   * @see #getDestination()
   * @generated
   */
  EReference getDestination_Permissions();

  /**
   * Returns the meta object for class '{@link navi.navigationRules.PermissionReference <em>Permission Reference</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Permission Reference</em>'.
   * @see navi.navigationRules.PermissionReference
   * @generated
   */
  EClass getPermissionReference();

  /**
   * Returns the meta object for the reference '{@link navi.navigationRules.PermissionReference#getPermission <em>Permission</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Permission</em>'.
   * @see navi.navigationRules.PermissionReference#getPermission()
   * @see #getPermissionReference()
   * @generated
   */
  EReference getPermissionReference_Permission();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  NavigationRulesFactory getNavigationRulesFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link navi.navigationRules.impl.RootImpl <em>Root</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see navi.navigationRules.impl.RootImpl
     * @see navi.navigationRules.impl.NavigationRulesPackageImpl#getRoot()
     * @generated
     */
    EClass ROOT = eINSTANCE.getRoot();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ROOT__NAME = eINSTANCE.getRoot_Name();

    /**
     * The meta object literal for the '<em><b>Mappingsdefs</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ROOT__MAPPINGSDEFS = eINSTANCE.getRoot_Mappingsdefs();

    /**
     * The meta object literal for the '<em><b>Transitiondefs</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ROOT__TRANSITIONDEFS = eINSTANCE.getRoot_Transitiondefs();

    /**
     * The meta object literal for the '<em><b>Ruledefs</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ROOT__RULEDEFS = eINSTANCE.getRoot_Ruledefs();

    /**
     * The meta object literal for the '{@link navi.navigationRules.impl.MappingsImpl <em>Mappings</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see navi.navigationRules.impl.MappingsImpl
     * @see navi.navigationRules.impl.NavigationRulesPackageImpl#getMappings()
     * @generated
     */
    EClass MAPPINGS = eINSTANCE.getMappings();

    /**
     * The meta object literal for the '<em><b>Mappings</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MAPPINGS__MAPPINGS = eINSTANCE.getMappings_Mappings();

    /**
     * The meta object literal for the '{@link navi.navigationRules.impl.MappingImpl <em>Mapping</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see navi.navigationRules.impl.MappingImpl
     * @see navi.navigationRules.impl.NavigationRulesPackageImpl#getMapping()
     * @generated
     */
    EClass MAPPING = eINSTANCE.getMapping();

    /**
     * The meta object literal for the '{@link navi.navigationRules.impl.MappingSpecImpl <em>Mapping Spec</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see navi.navigationRules.impl.MappingSpecImpl
     * @see navi.navigationRules.impl.NavigationRulesPackageImpl#getMappingSpec()
     * @generated
     */
    EClass MAPPING_SPEC = eINSTANCE.getMappingSpec();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MAPPING_SPEC__NAME = eINSTANCE.getMappingSpec_Name();

    /**
     * The meta object literal for the '{@link navi.navigationRules.impl.PermissionMappingSpecImpl <em>Permission Mapping Spec</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see navi.navigationRules.impl.PermissionMappingSpecImpl
     * @see navi.navigationRules.impl.NavigationRulesPackageImpl#getPermissionMappingSpec()
     * @generated
     */
    EClass PERMISSION_MAPPING_SPEC = eINSTANCE.getPermissionMappingSpec();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PERMISSION_MAPPING_SPEC__VALUE = eINSTANCE.getPermissionMappingSpec_Value();

    /**
     * The meta object literal for the '{@link navi.navigationRules.impl.CoordinateMappingSpecImpl <em>Coordinate Mapping Spec</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see navi.navigationRules.impl.CoordinateMappingSpecImpl
     * @see navi.navigationRules.impl.NavigationRulesPackageImpl#getCoordinateMappingSpec()
     * @generated
     */
    EClass COORDINATE_MAPPING_SPEC = eINSTANCE.getCoordinateMappingSpec();

    /**
     * The meta object literal for the '<em><b>Controllername</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COORDINATE_MAPPING_SPEC__CONTROLLERNAME = eINSTANCE.getCoordinateMappingSpec_Controllername();

    /**
     * The meta object literal for the '<em><b>Bundleid</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COORDINATE_MAPPING_SPEC__BUNDLEID = eINSTANCE.getCoordinateMappingSpec_Bundleid();

    /**
     * The meta object literal for the '{@link navi.navigationRules.impl.TransitionDefinitionsImpl <em>Transition Definitions</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see navi.navigationRules.impl.TransitionDefinitionsImpl
     * @see navi.navigationRules.impl.NavigationRulesPackageImpl#getTransitionDefinitions()
     * @generated
     */
    EClass TRANSITION_DEFINITIONS = eINSTANCE.getTransitionDefinitions();

    /**
     * The meta object literal for the '<em><b>Transitions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TRANSITION_DEFINITIONS__TRANSITIONS = eINSTANCE.getTransitionDefinitions_Transitions();

    /**
     * The meta object literal for the '{@link navi.navigationRules.impl.TransitionDefinitionImpl <em>Transition Definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see navi.navigationRules.impl.TransitionDefinitionImpl
     * @see navi.navigationRules.impl.NavigationRulesPackageImpl#getTransitionDefinition()
     * @generated
     */
    EClass TRANSITION_DEFINITION = eINSTANCE.getTransitionDefinition();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TRANSITION_DEFINITION__NAME = eINSTANCE.getTransitionDefinition_Name();

    /**
     * The meta object literal for the '{@link navi.navigationRules.impl.NavigationRulesImpl <em>Navigation Rules</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see navi.navigationRules.impl.NavigationRulesImpl
     * @see navi.navigationRules.impl.NavigationRulesPackageImpl#getNavigationRules()
     * @generated
     */
    EClass NAVIGATION_RULES = eINSTANCE.getNavigationRules();

    /**
     * The meta object literal for the '<em><b>Rules</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NAVIGATION_RULES__RULES = eINSTANCE.getNavigationRules_Rules();

    /**
     * The meta object literal for the '{@link navi.navigationRules.impl.RuleImpl <em>Rule</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see navi.navigationRules.impl.RuleImpl
     * @see navi.navigationRules.impl.NavigationRulesPackageImpl#getRule()
     * @generated
     */
    EClass RULE = eINSTANCE.getRule();

    /**
     * The meta object literal for the '<em><b>Source</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RULE__SOURCE = eINSTANCE.getRule_Source();

    /**
     * The meta object literal for the '<em><b>Destinations</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RULE__DESTINATIONS = eINSTANCE.getRule_Destinations();

    /**
     * The meta object literal for the '{@link navi.navigationRules.impl.DestinationImpl <em>Destination</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see navi.navigationRules.impl.DestinationImpl
     * @see navi.navigationRules.impl.NavigationRulesPackageImpl#getDestination()
     * @generated
     */
    EClass DESTINATION = eINSTANCE.getDestination();

    /**
     * The meta object literal for the '<em><b>Transition</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DESTINATION__TRANSITION = eINSTANCE.getDestination_Transition();

    /**
     * The meta object literal for the '<em><b>Target</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DESTINATION__TARGET = eINSTANCE.getDestination_Target();

    /**
     * The meta object literal for the '<em><b>Permissions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DESTINATION__PERMISSIONS = eINSTANCE.getDestination_Permissions();

    /**
     * The meta object literal for the '{@link navi.navigationRules.impl.PermissionReferenceImpl <em>Permission Reference</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see navi.navigationRules.impl.PermissionReferenceImpl
     * @see navi.navigationRules.impl.NavigationRulesPackageImpl#getPermissionReference()
     * @generated
     */
    EClass PERMISSION_REFERENCE = eINSTANCE.getPermissionReference();

    /**
     * The meta object literal for the '<em><b>Permission</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PERMISSION_REFERENCE__PERMISSION = eINSTANCE.getPermissionReference_Permission();

  }

} //NavigationRulesPackage
