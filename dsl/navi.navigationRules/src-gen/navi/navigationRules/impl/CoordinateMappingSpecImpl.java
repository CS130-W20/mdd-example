/**
 * generated by Xtext 2.19.0
 */
package navi.navigationRules.impl;

import navi.navigationRules.CoordinateMappingSpec;
import navi.navigationRules.NavigationRulesPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Coordinate Mapping Spec</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link navi.navigationRules.impl.CoordinateMappingSpecImpl#getControllername <em>Controllername</em>}</li>
 *   <li>{@link navi.navigationRules.impl.CoordinateMappingSpecImpl#getBundleid <em>Bundleid</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CoordinateMappingSpecImpl extends MappingSpecImpl implements CoordinateMappingSpec
{
  /**
   * The default value of the '{@link #getControllername() <em>Controllername</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getControllername()
   * @generated
   * @ordered
   */
  protected static final String CONTROLLERNAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getControllername() <em>Controllername</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getControllername()
   * @generated
   * @ordered
   */
  protected String controllername = CONTROLLERNAME_EDEFAULT;

  /**
   * The default value of the '{@link #getBundleid() <em>Bundleid</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBundleid()
   * @generated
   * @ordered
   */
  protected static final String BUNDLEID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBundleid() <em>Bundleid</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBundleid()
   * @generated
   * @ordered
   */
  protected String bundleid = BUNDLEID_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CoordinateMappingSpecImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return NavigationRulesPackage.Literals.COORDINATE_MAPPING_SPEC;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getControllername()
  {
    return controllername;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setControllername(String newControllername)
  {
    String oldControllername = controllername;
    controllername = newControllername;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, NavigationRulesPackage.COORDINATE_MAPPING_SPEC__CONTROLLERNAME, oldControllername, controllername));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getBundleid()
  {
    return bundleid;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBundleid(String newBundleid)
  {
    String oldBundleid = bundleid;
    bundleid = newBundleid;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, NavigationRulesPackage.COORDINATE_MAPPING_SPEC__BUNDLEID, oldBundleid, bundleid));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case NavigationRulesPackage.COORDINATE_MAPPING_SPEC__CONTROLLERNAME:
        return getControllername();
      case NavigationRulesPackage.COORDINATE_MAPPING_SPEC__BUNDLEID:
        return getBundleid();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case NavigationRulesPackage.COORDINATE_MAPPING_SPEC__CONTROLLERNAME:
        setControllername((String)newValue);
        return;
      case NavigationRulesPackage.COORDINATE_MAPPING_SPEC__BUNDLEID:
        setBundleid((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case NavigationRulesPackage.COORDINATE_MAPPING_SPEC__CONTROLLERNAME:
        setControllername(CONTROLLERNAME_EDEFAULT);
        return;
      case NavigationRulesPackage.COORDINATE_MAPPING_SPEC__BUNDLEID:
        setBundleid(BUNDLEID_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case NavigationRulesPackage.COORDINATE_MAPPING_SPEC__CONTROLLERNAME:
        return CONTROLLERNAME_EDEFAULT == null ? controllername != null : !CONTROLLERNAME_EDEFAULT.equals(controllername);
      case NavigationRulesPackage.COORDINATE_MAPPING_SPEC__BUNDLEID:
        return BUNDLEID_EDEFAULT == null ? bundleid != null : !BUNDLEID_EDEFAULT.equals(bundleid);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (controllername: ");
    result.append(controllername);
    result.append(", bundleid: ");
    result.append(bundleid);
    result.append(')');
    return result.toString();
  }

} //CoordinateMappingSpecImpl
